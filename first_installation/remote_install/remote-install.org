#+title: Remote Install

* making 'Install USB' /control computer/
**  build iso-image version of install OS
- $ nix build .#nixosConfigurations.[install-OS-name].config.system.build.isoImage
  # nix repl >> :lf . >> [tab] searching
- $ ls -lah
  # result -> [real-path-of-install-OS]

**  copy install OS to the usb
- $ lsblk (confirm [device-name-of-usb] and 'mount state')
- $ sudo fdisk /dev/[device-name-of-usb] >> m >> d (delete a partition) >> p (partition table) >> g (gpt) >> q (quit)
- $ sudo dd if=[real-path-of-install-OS] of=/dev/[device-name-of-usb] bs=4M status=progress

**  eject the usb
- $ lsblk (confirm 'mount state')
- $ umount [device-name-of-mounted-usb]
- Eject the usb from computer

* build nixos-configuration for target computer /control computer/
** build target OS image
- $ nix build .#nixosConfigurations.[target-OS-name].config.system.build.toplevel
- ls -lah
  # result -> [real-path-of-target-OS]

* target computer setting /target computer/
** hardware setting
- internet line connection, install USB insert
- bios setup for usb booting (sometimes it needs to 'disable' [Secure Boot])

** format partitions (Gparted)
- 'Gparted'
- delete all partitions
- making 'BOOT' partition
  preceding 1MiB, size: 512MiB, Primary Partitions, no Partition name, fat32, Label: BOOT
- making 'root' partition
  preceding 0MiB, size: all the amount of remain, Primary Partitions, no Partition name, ext4, Label: root
- Apply
- Manage flags: set 'BOOT' partitions as 'esp' & 'boot'

** internet connection confirm & get IP address
- open 'terminal'
- $ ifconfig
  # check the ip address
- $ ping google.com
  # internet connection check

** mount 'root' & 'BOOT' partition
- $ sudo su
- # mount /dev/disk/by-label/root /mnt
- # mkdir /mnt/boot
- # mount /dev/disk/by-label/BOOT /mnt/boot

* nix copy /control computer/
** ssh connection test
- $ ssh root@[target-computer-IP]
# check the user information of the target OS configuration, and check the openssh.authorizedKeys.keys
# authorizedKeys.keys has to be same with the public ssh key of /control computer/
- {ssh}$ exit

** nix copy to /target computer/
- $ nix copy [real-path-of-target-OS] --to "ssh-ng://root@[target-computer-IP]?remote-store=/mnt" --no-check-sigs

* nixos-install /target computer/
** nixos-install
- confirm the result of 'nix copy' >> $ ls /mnt/nix/store/[real-path-of-target-OS]
- # nixos-install --system /nix/store/[real-path-of-target-OS]
- # reboot
- Eject 'install USB'


* ssh-key copy (if it needs to have same authority) /control computer/
** ~./ssh copy from /control computer/ to /target computer/
- scp -r ~/.ssh [user-name]@[target-computer-IP]:/home/[user-name]/.ssh
# if finger print warning, then delete the ~/.ssh/knownhosts at /control computer/

* apply home-manager /target computer/
** git clone 'my-nixos'

** apply home-manager
- $ nix flake update
- $ nix develop
- $ home-manager switch --flake .#[home-configuration-name]
